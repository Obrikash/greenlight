openapi: "3.0.0"
info:
  title: "Movies API"
  version: "0.3.7"

servers:
  - url: "http://localhost:4000"

paths:
  /v1/users:
    post:
      summary: Create a new User
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserForm"
            example:
              name: "Nikita"
              email: "obrikash@gmail.com"
              password: "12345678"
      responses:
        "201":
          description: Successfully created User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreated'
              example:
                user:
                  id: 10
                  created_at: "2025-03-28T12:40:41+03:00"
                  name: "Nikita"
                  email: "obrikash@gmail.com"
                  activated: false
  /v1/tokens/authentication:
    post:
      summary: Create JWT Auth token for User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              example:
                email: "obrikash@gmail.com"
                password: "12345678"
      responses:
        "201":
          description: "Successfully authenticated and token receive"
          content:
            application/json:
              schema:
                type: object
                properties:
                  authentication_token:
                    type: string
                    format: JWT
                example:
                  authentication_token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNzA4MzQ1MTIzLCJleHAiOjE3MDgzNTUxMjN9.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
        "400":
          description: "invalid json format"
          content:
            application/json:
              schema:
                $ref: '#/components/responses/400BadRequest'
              example:
                error: "body contains unknown key \"bruh\" "
        "422":
          description: "invalid data (wrong email or password) or lack of some data"
          content:
            application/json:
              example:
                error: "invalid authentication credentials"

  /v1/users/activated:
    put:
      summary: Activate the user
      description: Tokens have expiration date of 72 hours
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
            example:
              token: "4KVK44UJKIMS3PYTWF5S32QMCA"
      responses:
        "200":
          description: "Successfully activated the user"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserCreated"
              example:
                user:
                  id: 10
                  created_at: "2025-03-28T12:40:41+03:00"
                  name: "Nikita"
                  email: "obrikash@gmail.com"
                  activated: true
        "400":
          description: "invalid json format"
          content:
            application/json:
              schema:
                $ref: '#/components/responses/400BadRequest'
              example:
                error: "body contains unknown key \"bruh\" "
        "422":
          description: "invalid data (e.g. wrong token) or lack of some data"
          content:
            application/json:
              example:
                error:
                  token: "must be 26 bytes long"




  /v1/movies:
    get:
      summary: Fetch all Movies
      description: 'Use "Authorization: Bearer" header.'
      security:
        - BearerAuth: []
      responses:
        "200":
          description: "Metadata object and Array of movies objects"
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    type: object
                    properties:
                      current_page:
                        type: integer
                      page_size:
                        type: integer
                      first_page:
                        type: integer
                      last_page:
                        type: integer
                      total_records:
                        type: integer
                  movies:
                    type: array
                    items:
                      $ref: "#/components/schemas/Movie"
                example:
                  metadata:
                    current_page: 1
                    page_size: 20
                    first_page: 1
                    last_page: 1
                    total_records: 3
                  movies:
                    - id: 2
                      title: "Black Panther"
                      year: 2018
                      runtime: "134 mins"
                      genres: ["action", "comedy"]
                      version: 1
                    - id: 3
                      title: "Deadpool"
                      year: 2016
                      runtime: "108 mins"
                      genres: ["action", "comedy"]
                      version: 1












components:
  # ------------------------------ #
  # Reusable schemas (data models)
  # ------------------------------ #
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "Requires a valid Bearer token in the Authorization header"

  schemas:
    UserForm:
      type: object
      properties:
          name:
            type: string
          email:
            type: string
          password:
            type: string
    UserCreated:
      type: object
      properties:
        user:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                  created_at:
                    type: string
                    format: date
                  name:
                    type: string
                  email:
                    type: string
                  activated:
                    type: boolean
    Movie:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        year:
          type: integer
        runtime:
          type: string
          format: "x mins"
        genres:
          type: array
          items:
            type: string
        version:
          type: integer

          
  responses:
    400BadRequest:
      description: "the error in json formatting"
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
    422UnproccessableEntity:
      description: "invalid data"


